eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGRvY2tlci1idWlsZC1kYi1pbWFnZToKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBwdHRnLXBvc3RncmVzIC1mIERvY2tlcmZpbGUgLgogICAgd2hlbjoKICAgICAgYnJhbmNoOiBbbWFzdGVyLCByZWZzL3RhZ3MvKl0KICAgICAgZXZlbnQ6IFtwdXNoLCB0YWddCgogIHRhZy1kYi1pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwdHRnIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1wb3N0Z3JlcyBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1wb3N0Z3JlczpsYXRlc3QKICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1wb3N0Z3JlczpsYXRlc3QKICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIHRhZy1sYXRlc3QtZG9ja2VyLWltYWdlOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGxvZ2luIC11PSJ1a2hvbWVvZmZpY2VkaWdpdGFsK3B0dGciIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBwdHRnLXBvc3RncmVzIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLXBvc3RncmVzOmxhdGVzdAogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1wb3N0Z3JlcyBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1wb3N0Z3JlczpidWlsZC0ke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1wb3N0Z3JlczpsYXRlc3QKICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1wb3N0Z3JlczpidWlsZC0ke0RST05FX0JVSUxEX05VTUJFUn0KICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCiAgCiAgdGFnLWRvY2tlci1pbWFnZS13aXRoLWdpdC10YWc6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrcHR0ZyIgLXA9JHtET0NLRVJfUEFTU1dPUkR9IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIHB0dGctcG9zdGdyZXMgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctcG9zdGdyZXM6JHtEUk9ORV9UQUd9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctcG9zdGdyZXM6JHtEUk9ORV9UQUd9CiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgogIGdldC1rdWJlLWNvbmZpZ3VyYXRpb246CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL1VLSG9tZU9mZmljZS9rdWJlLXB0dGctcG9zdGdyZXMuZ2l0CiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHRhZywgZGVwbG95bWVudF0KCiAgZGVwbG95LXRvLWRldi1mcm9tLWJ1aWxkLW51bWJlcjoKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwva2Q6djAuMi4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgICAtIEtVQkVfTkFNRVNQQUNFPXB0LWktZGV2CiAgICAgIC0gRU5WSVJPTk1FTlQ9ZGV2CiAgICAgIC0gVkVSU0lPTj1idWlsZC0ke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgLSBLVUJFX1NFUlZFUj1odHRwczovL2t1YmUtZGV2LmRzcC5ub3Rwcm9kLmhvbWVvZmZpY2UuZ292LnVrCiAgICBjb21tYW5kczoKICAgICAgLSBjZCBrdWJlLXB0dGctcG9zdGdyZXMKICAgICAgLSAuL2RlcGxveS5zaAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBbbWFzdGVyXQogICAgICBldmVudDogW3B1c2gsIHRhZ10KCiAgZGVwbG95LXRvLXByZXByb2QtZnJvbS1idWlsZC10YWc6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgICAgLSBLVUJFX05BTUVTUEFDRT1wdC1pLXByZXByb2QKICAgICAgLSBFTlZJUk9OTUVOVD1wcmVwcm9kCiAgICAgIC0gVkVSU0lPTj0ke0RST05FX1RBR30KICAgICAgLSBLVUJFX1NFUlZFUj1odHRwczovL2t1YmUtZGV2LmRzcC5ub3Rwcm9kLmhvbWVvZmZpY2UuZ292LnVrCiAgICBjb21tYW5kczoKICAgICAgLSBjZCBrdWJlLXB0dGctcG9zdGdyZXMKICAgICAgLSAuL2RlcGxveS5zaAogICAgd2hlbjoKICAgICAgZXZlbnQ6IFt0YWddCgogIGRlcGxveToKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwva2Q6djAuMi4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgICAtIEtVQkVfTkFNRVNQQUNFPXB0LWktJHtEUk9ORV9ERVBMT1lfVE99CiAgICAgIC0gRU5WSVJPTk1FTlQ9JHtEUk9ORV9ERVBMT1lfVE99CiAgICAgIC0gVkVSU0lPTj0ke0lNQUdFX1ZFUlNJT059CiAgICAgIC0gS1VCRV9TRVJWRVI9aHR0cHM6Ly9rdWJlLWRldi5kc3Aubm90cHJvZC5ob21lb2ZmaWNlLmdvdi51awogICAgY29tbWFuZHM6CiAgICAgIC0gY2Qga3ViZS1wdHRnLXBvc3RncmVzCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBkZXBsb3ltZW50CiAgICAgIGVudmlyb25tZW50OiBbZGV2LCB0ZXN0LCBwcmVwcm9kXQoKICBkZXBsb3ktdG8tcHJvZDoKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwva2Q6djAuMi4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgICAtIEtVQkVfTkFNRVNQQUNFPXB0LWktcHJvZAogICAgICAtIEtVQkVfVE9LRU49JHtQUk9EX0tVQkVfVE9LRU59CiAgICAgIC0gRU5WSVJPTk1FTlQ9cHJvZAogICAgICAtIFZFUlNJT049JHtJTUFHRV9WRVJTSU9OfQogICAgICAtIEtVQkVfU0VSVkVSPWh0dHBzOi8va3ViZS5kc3AuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51awogICAgY29tbWFuZHM6CiAgICAgIC0gY2Qga3ViZS1wdHRnLXBvc3RncmVzCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBkZXBsb3ltZW50CiAgICAgIGVudmlyb25tZW50OiBwcm9kCgpzZXJ2aWNlczoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExLWRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5Igo.z2pBYA1ZuvCcccvHxGjUh4NLGNCbITfnV6ohTLR5i10